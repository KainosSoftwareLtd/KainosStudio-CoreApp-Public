{% macro element(elementData) %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}
{% from "govuk/components/character-count/macro.njk" import govukCharacterCount %}

{% set displayText = elementData.displayText | trans() %}

{% if elementData.maxLength %}
  {% if elementData.valid %}
    {{ govukCharacterCount({
      label: {
        text: displayText,
        isPageHeading: elementData.isPageHeading,
        classes: elementData.labelClasses
      },
      id: elementData.name,
      name: elementData.name,
      maxlength: elementData.maxLength,
      hint: {
        text: elementData.hint | trans()
      },
      value: elementData.value
    }) }}
  {% else %}
    {{ govukCharacterCount({
      label: {
        text: displayText,
        isPageHeading: elementData.isPageHeading,
        classes: elementData.labelClasses
      },
      id: elementData.name,
      name: elementData.name,
      maxlength: elementData.maxLength,
      hint: {
        text: elementData.hint | trans()
      },
      errorMessage: {
        text: elementData.validation.error | trans({ for: displayText })
      },
      value: elementData.value
    }) }}
  {% endif %}
{% else %}
  {% if elementData.valid %}
    {{ govukTextarea({
      label: {
        text: displayText,
        isPageHeading: elementData.isPageHeading,
        classes: elementData.labelClasses
      },
      id: elementData.name,
      name: elementData.name,
      hint: {
        text: elementData.hint | trans()
      },
      value: elementData.value
    }) }}
  {% else %}
    {{ govukTextarea({
      label: {
        text: displayText,
        isPageHeading: elementData.isPageHeading,
        classes: elementData.labelClasses
      },
      id: elementData.name,
      name: elementData.name,
      hint: {
        text: elementData.hint | trans()
      },
      errorMessage: {
        text: elementData.validation.error | trans({ for: displayText })
      },
      value: elementData.value
    }) }}
  {% endif %}
{% endif %}

{% endmacro %}


